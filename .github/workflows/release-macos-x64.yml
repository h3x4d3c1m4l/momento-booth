name: Release - macOS x64

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

# Sets permissions to allow version tag
permissions:
  contents: write

jobs:
  build:
    if: ${{ github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/') }}

    runs-on: macos-latest

    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: brew install create-dmg

    - name: Detect Flutter Version
      uses: kuhnroyal/flutter-fvm-config-action@v2

    - name: Setup Flutter
      uses: hrishikesh-kadam/setup-flutter@v1
      with:
        ref: ${{ env.FLUTTER_VERSION }}
        setFlutterRootPath: 'true'
        addPubCacheBinToPath: 'true'
        flutterPrecache: '--macos'

    - name: Install minimal Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        target: aarch64-apple-darwin

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          rust -> ../build/macos/Build/Intermediates.noindex/momento_booth_native_helpers.build/cargo_target
          rust -> target
      
    - name: Setup sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5

    - name: Install cargo-expand
      uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-expand

    - name: Install flutter_rust_bridge_codegen
      uses: baptiste0928/cargo-install@v3
      with:
        crate: flutter_rust_bridge_codegen
        version: "2.0.0"

    - name: Install flutter_distributor
      run: dart pub global activate flutter_distributor

    - name: Install Dependencies
      run: flutter pub get --enforce-lockfile

    - name: Generation l10n
      run: flutter gen-l10n

    - name: Generate Dart-to-Rust bridging code
      run: flutter_rust_bridge_codegen generate

    - name: Code generation
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Flutter Analyze
      run: flutter analyze

    # Extract version from branch name
    - name: Extract Release version
      id: extract_release_version
      shell: bash
      run: |
        release_version=$(echo ${{ github.event.pull_request.head.ref }} | cut -d/ -f2)
        echo "release_version=$release_version" >> $GITHUB_OUTPUT
        echo "distributor_version=${release_version/-/+}" >> $GITHUB_OUTPUT

    - name: Build Project
      run: flutter build macos -v --release --dart-define SENTRY_DSN=${{ secrets.SENTRY_DSN }} --dart-define SENTRY_ENVIRONMENT=Production --dart-define SENTRY_RELEASE=${{ steps.extract_release_version.outputs.distributor_version }} --dart-define FLUTTER_VERSION=${{ env.FLUTTER_VERSION }}

    - name: Copy binary to bundle and bundle dependency dylibs
      run: |
        mkdir macos_package
        cp -R build/macos/Build/Products/Release/MomentoBooth.app macos_package/

    # Pack
    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.6
      with:
        type: 'zip'
        directory: macos_package
        filename: 'MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-macOS-x64.zip'

    # Create GitHub release
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        prerelease: true
        replacesArtifacts: true
        tag: ${{ steps.extract_release_version.outputs.release_version }}
        artifacts: "macos_package/MomentoBooth-${{ steps.extract_release_version.outputs.release_version }}-macOS-x64.zip"
